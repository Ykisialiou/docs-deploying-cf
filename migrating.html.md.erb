---
title: Migrating from cf-release to cf-deployment
owner: Release Integration
---

<strong><%= modified_date %></strong>

This topic describes how to migrate your Cloud Foundry deployment
from `cf-release` to `cf-deployment`.
The procedures in this topic are specific to Amazon Web Services (AWS).
While transitions on other IaaSes are possible,
they are not currently supported.

<p class="note"><strong>Note</strong>:
You must have the BOSH CLI v2 installed
to perform the procedures in this topic.
For more information, see the <a href="https://bosh.io/docs/cli-v2.html#install">BOSH documentation</a>.</p>

## <a id='configure-cli'></a> Step 1: Configure the BOSH CLI v2

Perform the following steps:

1. Set your BOSH Director address, username, password as environment variables:
  <pre class="terminal">
  $ export BOSH\_ENVIRONMENT=YOUR-DIRECTOR-ADDRESS
  $ export BOSH\_CLIENT=YOUR-DIRECTOR-USERNAME
  $ export BOSH\_CLIENT\_SECRET=YOUR-DIRECTOR-PASSWORD
  </pre>

1. Confirm that your BOSH CLI is logged in and working:
  <pre class="terminal">
  $ bosh deployments
  Using environment 'bosh.example.com' as client 'admin'
  <br>
  Name      Release(s)            Stemcell(s)                                      Team(s)  Cloud Config
  cf        cf/268                bosh-aws-xen-hvm-ubuntu-trusty-go\_agent/3421.11  -        none
  cf-diego  garden-runc/1.9.0     bosh-aws-xen-hvm-ubuntu-trusty-go\_agent/3421.11  -        none
              grootfs/0.21.0
              cf-networking/1.2.0
              cflinuxfs2/1.138.0
              diego/1.23.0
              cf/268
  </pre>

1. Set your Cloud Foundry deployment name as an environment variable:
  <pre class="terminal">
  $ export BOSH\_DEPLOYMENT=YOUR-CF-DEPLOYMENT-NAME
  </pre>

1. If your BOSH Director is configured with a self-signed certificate,
perform the following steps to provide that certificate to the BOSH CLI.
  1. Extract the necessary certificate
  from your BOSH Director deployment manifest:
  <pre class="terminal">
  $ bosh interpolate --path=/properties/director/ssl/cert PATH-TO-YOUR-BOSH-DIRECTOR-MANIFEST > /tmp/bosh-CA.crt
  </pre>
  1. Configure the BOSH CLI to use the extracted certificate:
  <pre class="terminal">
  $ export BOSH\_CA\_CERT=/tmp/bosh-CA.crt
  </pre>

## <a id='var-store-file'></a> Step 2: Build Variables Store File

You must build a variables store file from your Cloud Foundry and Diego manifests.

This file contains information that provides environment-specific or sensitive configuration
that the BOSH CLI reads and writes to. The operator uses this file when deploying Cloud Foundry
with `cf-deployment`.

Perform the following steps to build your variables store file:

1. Download your Cloud Foundry and Diego manifests from your existing `cf-release`-based deployments:
  <pre class="terminal">
  $ bosh download-manifest > cf.yml
  $ bosh download-manifest -d YOUR-DIEGO-DEPLOYMENT-NAME > diego.yml
  </pre>
1. Visit the [cf-deployment-transition](https://github.com/cloudfoundry/cf-deployment-transition/blob/master/README.md) GitHub repo and use the `extract-vars-store-from-manifests.sh` script to generate `deployment-vars.yml`.

## <a id='deploy-cf'></a> Step 3: Deploy Cloud Foundry

Perform the steps in the [Deploying Cloud Foundry](./cf-deployment/deploy-cf.html) topic. Keep in mind the following when deploying Cloud Foundry in [Step 5: Deploy](./cf-deployment/deploy-cf.html#deploy):

* You must apply the `cfr-to-cfd.yml` ops file. Download this ops file from the [cf-deployment-transition](https://github.com/cloudfoundry/cf-deployment-transition/blob/master/cfr-to-cfd.yml) GitHub repo.
* The `deployment-vars.yml` file you pass with the `--vars-store` flag must be the variables store file you created in the previous step.

## <a id='cleanup'></a> Step 4: Clean Up
